public class Recursion{
 //code from Tantalo
 public static void main(String[] args){

 int[] A = {-1, 2, 6, 12, 9, 2, -5, -2, 8, 5, 7};
 int[] B = new int[A.length];
 int[] C = new int[A.length];
 int minIndex = minArrayIndex(A, 0, A.length-1);
 int maxIndex = maxArrayIndex(A, 0, A.length-1);

 for(int x: A) System.out.print(x+" ");
 System.out.println();

 System.out.println( "minIndex = " + minIndex );
 System.out.println( "maxIndex = " + maxIndex );
 reverseArray1(A, A.length, B);
 for(int x: B) System.out.print(x+" ");
 System.out.println();

 reverseArray2(A, A.length, C);
 for(int x: C) System.out.print(x+" ");
 System.out.println();

 reverseArray3(A, 0, A.length-1);
 for(int x: A) System.out.print(x+" ");
 System.out.println();

 }
   static void reverseArray1(int[] X, int n, int[] Y){
		if (n==0){
		return;
		}else{
			Y[Y.length-n] = X[n-1];
			reverseArray1(X, n-1, Y);
			}
		}
	static void reverseArray2(int[] X, int n, int[] Y){
		if (n==0){
			return;
		}else{
			Y[n-1] = X[X.length-n];
			reverseArray2(X, n-1, Y);
			}
		}
		//similar to a swap function given from tantalo in cmps11
	static void reverseArray3(int[] X, int i, int j){
		if (i>=j){
			return;
		}else{
			int t = X[j];
			X[j] = X[i];
			X[i] = t;
			reverseArray3(X, i+1, j-1);
			}
		}
		
 
   //Act as the minArrayIndex & maxArrayIndex
   //set a left and right and compare the two what ever is higher becomes q
   // based on mergeSort()
   //Credit to Tantalo
   // sort subarray A[p...r]
   public static int maxArrayIndex(int[] A, int p, int r){
      int q=0;
      if(p < r) {
         q = (p+r)/2;
         // System.out.println(p+" "+q+" "+r);
		 int left=maxArrayIndex(A, p, q);
		 int right=maxArrayIndex(A, q+1, r);
		 if (A[left]>A[right]) {
			 q = left;
			}else{
			if (A[left]<A[right]){
				q = right;
				}
			}
			return q;
		}else{
			return p;
		}
	}
	
   //set a left and right and compare the two what ever is lower becomes q
   // based on mergeSort()
   //Credit to Tantalo
   // sort sub array A[p...r]
   public static int minArrayIndex(int[] A, int p, int r){
      int q=0;
      if(p < r) {
         q = (p+r)/2;
         // System.out.println(p+" "+q+" "+r);
		 int left=minArrayIndex(A, p, q);
		 int right=minArrayIndex(A, q+1, r);
		 if (A[left]>A[right]) {
			 q = right;
			}else{
			if (A[left]<A[right]){
				q = left;
				}
			}
		}
	return q;
	}
   
}